// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/go-nunu/nunu-layout-mcp/internal/handler"
	"github.com/go-nunu/nunu-layout-mcp/internal/repository"
	"github.com/go-nunu/nunu-layout-mcp/internal/server"
	"github.com/go-nunu/nunu-layout-mcp/internal/service"
	"github.com/go-nunu/nunu-layout-mcp/pkg/app"
	"github.com/go-nunu/nunu-layout-mcp/pkg/log"
	"github.com/go-nunu/nunu-layout-mcp/pkg/server/mcp"
	"github.com/go-nunu/nunu-layout-mcp/pkg/sid"
	"github.com/google/wire"
	"github.com/spf13/viper"
)

// Injectors from wire.go:

func NewWire(viperViper *viper.Viper, logger *log.Logger) (*app.App, func(), error) {
	handlerHandler := handler.NewHandler(logger)
	sidSid := sid.NewSid()
	serviceService := service.NewService(logger, sidSid)
	repositoryRepository := repository.NewRepository(logger)
	exampleRepository := repository.NewExampleRepository(repositoryRepository)
	exampleService := service.NewExampleService(serviceService, exampleRepository)
	exampleHandler := handler.NewExampleHandler(handlerHandler, exampleService)
	mcpServer := server.NewMCPServer(viperViper, logger, exampleHandler)
	appApp := newApp(mcpServer)
	return appApp, func() {
	}, nil
}

// wire.go:

var repositorySet = wire.NewSet(repository.NewRepository, repository.NewExampleRepository)

var serviceSet = wire.NewSet(service.NewService, service.NewExampleService)

var handlerSet = wire.NewSet(handler.NewHandler, handler.NewExampleHandler)

var serverSet = wire.NewSet(server.NewMCPServer)

// build App
func newApp(
	mcpServer *mcp.Server,
) *app.App {
	return app.NewApp(app.WithServer(
		mcpServer,
	), app.WithName("demo-server"),
	)
}
